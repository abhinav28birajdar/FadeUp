name: FadeUp CI/CD Pipeline

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    name: Test and Lint
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run TypeScript check
      run: npx tsc --noEmit
      
    - name: Run ESLint
      run: npm run lint
      
    - name: Run tests
      run: npm test -- --coverage --watchAll=false
      
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      if: success()
      
  build-preview:
    name: Build Preview
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'pull_request'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22'
        cache: 'npm'
        
    - name: Setup Expo CLI
      run: npm install -g @expo/cli
      
    - name: Install dependencies
      run: npm ci
      
    - name: Expo Doctor
      run: npx expo-doctor
      
    - name: Build for Web (Preview)
      run: npx expo export:web
      
  build-production:
    name: Build Production
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22'
        cache: 'npm'
        
    - name: Setup Expo CLI
      run: npm install -g @expo/cli eas-cli
      
    - name: Install dependencies
      run: npm ci
      
    - name: Expo Doctor
      run: npx expo-doctor
      
    - name: Build iOS (EAS)
      env:
        EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}
      run: eas build --platform ios --non-interactive
      if: success()
      
    - name: Build Android (EAS) 
      env:
        EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}
      run: eas build --platform android --non-interactive
      if: success()

  security-audit:
    name: Security Audit
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run security audit
      run: npm audit --audit-level=high
      
    - name: Check for vulnerabilities
      run: npm audit --audit-level=moderate --production
